plugins {
    id("java")
    id("xyz.jpenilla.run-paper") version "2.2.3"
    id("com.gradleup.shadow") version "8.3.1"
    id("org.jetbrains.kotlin.jvm")
    id("org.jetbrains.kotlin.plugin.serialization") version '2.0.20'
}

group = 'com.github.sheauoian'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "CodeMC"
        url = uri("https://repo.codemc.io/repository/maven-public/")
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "sonatype-oss-snapshots"
        url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    }

    maven {
        url = "https://repo.dmulloy2.net/repository/public/"
    }
    maven {
        name = "Lumine Releases"
        url = "https://mvn.lumine.io/repository/maven-public/"
    }
    maven {
        url = "https://jitpack.io"
    }
    // Lite Commands
    maven {
        url = "https://repo.panda-lang.org/releases"
    }
}

dependencies {
    // PaperMC
    compileOnly("io.papermc.paper:paper-api:1.20.6-R0.1-SNAPSHOT")
    // Kyori Adventure
    implementation("net.kyori:adventure-api:4.17.0")
    // NBT API
    compileOnly("de.tr7zw:item-nbt-api-plugin:2.12.3")
    // FastBoard
    implementation('fr.mrmicky:fastboard:2.1.2')
    // Protocol Lib
    compileOnly("com.comphenix.protocol:ProtocolLib:5.1.0")
    // Mythic API
    compileOnly("io.lumine:Mythic-Dist:5.6.1")
    // SQLite
    implementation("org.xerial:sqlite-jdbc:3.45.2.0")
    // Simple HologramAPI (Text Display)
    compileOnly("com.github.MaximFiedler:HologramAPI:1.1.4")
    // Decent Holograms
    compileOnly("com.github.decentsoftware-eu:decentholograms:2.8.11")
    // Obliviate Inventory
    implementation("com.github.hamza-cskn.obliviate-invs:core:4.3.0")
    implementation("com.github.hamza-cskn.obliviate-invs:configurablegui:4.3.0")
    implementation("com.github.hamza-cskn.obliviate-invs:pagination:4.3.0")
    // Kotlin
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    // IF (GUI Manager)
    implementation("com.github.stefvanschie.inventoryframework:IF:0.10.17")
    // https://mvnrepository.com/artifact/org.json/json
    implementation("org.json:json:20240303")

    // Kotlin Serializer
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.3")

    // https://mvnrepository.com/artifact/net.dv8tion/JDA
    implementation("net.dv8tion:JDA:5.1.2") {
        exclude module: 'opus-java'
    }


    // Lite Commands
    implementation("dev.rollczi:litecommands-bukkit:3.6.1")
    implementation("dev.rollczi:litecommands-adventure:3.6.1")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

build {
    dependsOn("shadowJar")
}

tasks.compileJava {
    options.compilerArgs.add("-parameters")
}


tasks {
    runServer {
        minecraftVersion("1.20.6")
    }
}
shadowJar {
    relocate 'com.github.stefvanschie.inventoryframework', 'com.github.sheauoian.croissantsys.api.inventoryframework'
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}