plugins {
    id("java")
    id("java-library")
    id("xyz.jpenilla.run-paper") version "2.2.3"
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("idea")
}

group = 'com.github.sheauoian'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "CodeMC"
        url = uri("https://repo.codemc.io/repository/maven-public/")
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "sonatype-oss-snapshots"
        url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    }

    maven {
        url = "https://repo.dmulloy2.net/repository/public/"
    }
    maven {
        name = "Lumine Releases"
        url = "https://mvn.lumine.io/repository/maven-public/"
    }
    maven {
        url = "https://jitpack.io"
    }
}

dependencies {
    // PaperMC
    compileOnly("io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT")

    implementation("net.kyori:adventure-api:4.17.0")
    // NBT API
    compileOnly("de.tr7zw:item-nbt-api-plugin:2.12.3")
    // FastBoard
    implementation('fr.mrmicky:fastboard:2.1.2')
    // Protocol Lib
    compileOnly("com.comphenix.protocol:ProtocolLib:5.1.0")
    // Mythic API
    compileOnly("io.lumine:Mythic-Dist:5.6.1")
    // SQLite
    implementation("org.xerial:sqlite-jdbc:3.45.2.0")
    // Simple HologramAPI (Text Display)
    compileOnly("com.github.MaximFiedler:HologramAPI:1.1.4")
    // Decent Holograms
    compileOnly("com.github.decentsoftware-eu:decentholograms:2.8.11")
    // Obliviate Inventory
    implementation("com.github.hamza-cskn.obliviate-invs:core:4.3.0")
    implementation("com.github.hamza-cskn.obliviate-invs:configurablegui:4.3.0")
    implementation("com.github.hamza-cskn.obliviate-invs:pagination:4.3.0")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}
tasks {
    runServer {
        minecraftVersion("1.20.4")
    }
}
processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
build {
    dependsOn(shadowJar)
    tasks.withType(JavaCompile).tap {
        configureEach {
            options.compilerArgs.add("-Xlint:unchecked")
            options.compilerArgs.add("-Xlint:deprecation")
        }
    }
}